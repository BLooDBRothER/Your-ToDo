generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email      String   @unique
  name       String
  profilePic String?  @map("profile_pic")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  folders    Folder[]

  @@map("users")
}

model Folder {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String
  parentFolderId String?   @db.Uuid @map("parent_folder_id")
  parentFolder   Folder?   @relation("parentFolder", fields: [parentFolderId], references: [id], onDelete: Cascade)
  folder         Folder[]  @relation("parentFolder")
  user           User?     @relation(fields: [createdBy], references: [id])
  createdBy      String    @db.Uuid @map("created_by")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  todo           Todo[]

  @@map("folders")
}

model Todo {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title          String
  folderId       String?    @map("folder_id") @db.Uuid
  folder         Folder?    @relation(fields: [folderId], references: [id], onDelete: Cascade) 

  todoContent    TodoContent[]

  @@map("todo")
}


model TodoContent {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  value          String
  isCompleted    Boolean   @map("is_completed") @default(false)
  todoId         String    @map("todo_id") @db.Uuid
  todo           Todo      @relation(fields: [todoId], references: [id])

  @@map("todo_content")
}
